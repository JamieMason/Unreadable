#!/usr/bin/env node

// store the directory we're being run from
var originalDir = __dirname;

// operate from our install dir
process.chdir(process.cwd());

var fs = require('fs');
var path = require('path');
var program = require('commander');
var command = 'phantomjs "#{cwd}/src/phantomRunner.js" "#{cwd}" "#{url}" \'#{config}\' #{inspect} #{outFile} --web-security=no --local-to-remote-url-access=yes --load-images=no';
var outFile;
var config;

// read arguments
program
  .version(require('./package.json').version)
  .option('-u --url [value]', 'URL to process')
  .option('-i --inspect', 'Inspect layout for changes caused by minification')
  .option('-o --output [value]', 'File to write minified source to')
  .option('-c --config [value]', 'Path to JSON configuration file (see https://github.com/JamieMason/Asterisk#config)')
  .parse(process.argv);

function onPhantomExit(error, stdout, stderr) {
  if(!error) {
    var output = fs.readFileSync(outFile, 'utf8');
    output = require('./src/server').processBrowserOutput(output, config);
    fs.writeFileSync(outFile, output, 'utf8');
  } else {
    console.error(error);
  }
}

if(program.url && program.output) {

  config = require('./src/configManager').init({
    executionDir: originalDir,
    binDir: __dirname,
    program: program
  });

  outFile = path.resolve('./' + program.output);

  command = command
    .split('#{cwd}').join(__dirname)
    .split('#{url}').join(program.url)
    .split('#{config}').join(JSON.stringify(config))
    .split('#{inspect}').join(!!program.inspect)
    .split('#{outFile}').join(outFile);

  require('child_process').exec(command, onPhantomExit);

}
